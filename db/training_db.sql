DROP SCHEMA IF EXISTS `TRAINING_DB`;

CREATE SCHEMA IF NOT EXISTS `TRAINING_DB`
CHARACTER SET `utf8`;

USE `TRAINING_DB`;

CREATE TABLE `ROLES` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `ROLE_NAME` VARCHAR(255) NOT NULL
);

CREATE TABLE `ACCOUNTS` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `EMAIL` VARCHAR(255) NOT NULL,
  `PASSWORD` VARCHAR(255) NOT NULL
);

CREATE TABLE `ACCOUNTS_TO_ROLES` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `FK_ROLE_ID` INTEGER NOT NULL,
  `FK_ACCOUNT_ID` INTEGER NOT NULL,

  CONSTRAINT `FK_TO_ROLE` FOREIGN KEY (`FK_ROLE_ID`) REFERENCES `ROLES` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,

  CONSTRAINT `FK_TO_ACCOUNT` FOREIGN KEY (`FK_ACCOUNT_ID`) REFERENCES `ACCOUNTS` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE `PROFILES` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `FIRST_NAME` VARCHAR(255) NOT NULL,
  `LAST_NAME` VARCHAR(255) NOT NULL,
  `MIDDLE_NAME` VARCHAR(255) DEFAULT NULL
);

CREATE TABLE `CATEGORIES` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `CATEGORY_NAME` VARCHAR(255) NOT NULL
);

CREATE TABLE `COURSES` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `COURSE_NAME` VARCHAR(555) NOT NULL,
  `FK_CATEGORY_ID` INTEGER NOT NULL,
  `FK_PROFILE_ID` INTEGER NOT NULL,

  CONSTRAINT `FK_COURSE_TO_CATEGORY` FOREIGN KEY (`FK_CATEGORY_ID`) REFERENCES `CATEGORIES` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,

  CONSTRAINT `FK_COURSE_TO_PROFILE` FOREIGN KEY (`FK_PROFILE_ID`) REFERENCES `PROFILES` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE `LESSONS` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `LESSON_NAME` VARCHAR(755) NOT NULL,
  `LESSON_ORDER` INTEGER NOT NULL,
  `FK_COURSE_ID` INTEGER NOT NULL,

  CONSTRAINT `FK_LESSON_TO_COURSE` FOREIGN KEY (`FK_COURSE_ID`) REFERENCES `COURSES` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE `GROUPS` (
  `ID` INTEGER NOT NULL AUTO_INCREMENT,
  `GROUP_NAME` VARCHAR(255) NOT NULL,
  `START_TRANING_DATE` DATETIME NOT NULL,
  `FK_COURSE_ID` INTEGER NOT NULL,

  PRIMARY KEY  (`ID`),

  CONSTRAINT `FK_GROUP_TO_COURSE` FOREIGN KEY (`FK_COURSE_ID`) REFERENCES `COURSES` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);

CREATE TABLE `PROFILES_TO_GROUPS` (
  `ID` INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `FK_PROFILE_ID` INTEGER NOT NULL,
  `FK_GROUP_ID` INTEGER NOT NULL,

  CONSTRAINT `FK_TO_PROFILE` FOREIGN KEY (`FK_PROFILE_ID`) REFERENCES `PROFILES` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,

  CONSTRAINT `FK_TO_GROUP` FOREIGN KEY (`FK_GROUP_ID`) REFERENCES `GROUPS` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);

INSERT INTO `TRAINING_DB`.`ROLES` (`ID`, `ROLE_NAME`) VALUES (1, 'Administrator');
INSERT INTO `TRAINING_DB`.`ROLES` (`ID`, `ROLE_NAME`) VALUES (2, 'Prepod');
INSERT INTO `TRAINING_DB`.`ROLES` (`ID`, `ROLE_NAME`) VALUES (3, 'Student');

INSERT INTO `TRAINING_DB`.`ACCOUNTS` (`ID`, `EMAIL`, `PASSWORD`) VALUES (1, '123', '123');

INSERT INTO `TRAINING_DB`.`ACCOUNTS_TO_ROLES` (`FK_ROLE_ID`, `FK_ACCOUNT_ID`) VALUES (1, 1);
INSERT INTO `TRAINING_DB`.`ACCOUNTS_TO_ROLES` (`FK_ROLE_ID`, `FK_ACCOUNT_ID`) VALUES (2, 1);

INSERT INTO `TRAINING_DB`.`PROFILES` (`ID`, `FIRST_NAME`, `LAST_NAME`, `MIDDLE_NAME`) VALUES (1, 'Михаил', 'Лазаревич', null);

 ALTER TABLE `ACCOUNTS`
  ADD CONSTRAINT `FK_ACCOUNT_TO_PROFILE` FOREIGN KEY (`ID`) REFERENCES `PROFILES` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

ALTER TABLE `PROFILES`
  ADD CONSTRAINT `FK_PROFILE_TO_ACCOUNT` FOREIGN KEY (`ID`) REFERENCES `ACCOUNTS` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

INSERT INTO `TRAINING_DB`.`CATEGORIES` (`ID`, `CATEGORY_NAME`) VALUES (1, 'Программирование');
INSERT INTO `TRAINING_DB`.`CATEGORIES` (`ID`, `CATEGORY_NAME`) VALUES (2, 'Выживание');
INSERT INTO `TRAINING_DB`.`CATEGORIES` (`ID`, `CATEGORY_NAME`) VALUES (3, 'Рукоделие');

INSERT INTO `TRAINING_DB`.`COURSES` (`ID`, `COURSE_NAME`, `FK_CATEGORY_ID`, `FK_PROFILE_ID`) VALUES (1, 'Java Enterprise Edition', 1, 1);
INSERT INTO `TRAINING_DB`.`COURSES` (`ID`, `COURSE_NAME`, `FK_CATEGORY_ID`, `FK_PROFILE_ID`) VALUES (2, 'Езда в троллейбусе в час пик', 2, 1);


INSERT INTO `TRAINING_DB`.`LESSONS` (`ID`, `LESSON_NAME`, `LESSON_ORDER`, `FK_COURSE_ID`) VALUES (null, 'Web Development - HTML, CSS, JS', 1, 1);
INSERT INTO `TRAINING_DB`.`LESSONS` (`ID`, `LESSON_NAME`, `LESSON_ORDER`, `FK_COURSE_ID`) VALUES (null, 'Web Development on Java Platform', 2, 1);
INSERT INTO `TRAINING_DB`.`LESSONS` (`ID`, `LESSON_NAME`, `LESSON_ORDER`, `FK_COURSE_ID`) VALUES (null, 'Servlets API', 3, 1);
INSERT INTO `TRAINING_DB`.`LESSONS` (`ID`, `LESSON_NAME`, `LESSON_ORDER`, `FK_COURSE_ID`) VALUES (null, 'JSP - Java Server Pages', 4, 1);
